plugins {
	id 'java'
	id 'org.springframework.boot' version  "${springBootVersion}"
	id 'io.spring.dependency-management' version '1.1.7'
	id 'jacoco'
}

jacoco {
	toolVersion = "0.8.10"
}

group = 'com.change.config'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation("org.springframework.retry:spring-retry:$springRetryVersion")
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${openapiWebmvcUI}"
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation "org.awaitility:awaitility:${awaitilityVersion}"
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.test {
	useJUnitPlatform()
	finalizedBy(tasks.jacocoTestReport)
}

tasks.jacocoTestReport {
	dependsOn(test)
	reports {
		xml.required.set(true)
		html.required.set(true)
	}
}
